---
import Bookmark from "src/icons/bookmark.svg";

interface Props {
  liked: boolean;
  recipeId: number;
}

const { liked, recipeId } = Astro.props;
---

<button
  data-liked={liked}
  data-id={recipeId}
  type="button"
  is="like-button"
  class="lg:text-2x fill-base data-[liked=true]:text-gold data-[liked=false]:hover:text-gold isolate m-auto data-[liked=false]:text-base data-[liked=true]:hover:text-base"
>
  <Bookmark size={26} />
</button>

<script>
  import { actions } from "astro:actions";

  class LikeButton extends HTMLButtonElement {
    recipeId: number = parseInt(this.dataset.id as string);

    async toggleStar() {
      const liked = this.dataset.liked;
      if (liked === "true") {
        this.dataset.liked = "false";
        await actions.Recipe.setLiked({ liked: false, id: this.recipeId });
      } else {
        this.dataset.liked = "true";
        await actions.Recipe.setLiked({ liked: true, id: this.recipeId });
      }
    }

    constructor() {
      super();
      this.addEventListener("click", async () => this.toggleStar());
    }
  }
  customElements.define("like-button", LikeButton, { extends: "button" });
</script>
