---
interface Props {
  destination?: string | URL | null;
  style: "generic" | "submit" | "cancel";
  size: "small" | "medium" | "large";
  rounded?: boolean;
  id?: string | undefined | null;
  type?: "submit" | "reset" | "button";
  extraClasses?: string;
}

const {
  destination,
  style,
  size,
  rounded = false,
  id,
  type,
  extraClasses,
  ...attrs
} = Astro.props;

let classes: string[] = ["text-rosePine-text mx-auto min-w-28", extraClasses!];
classes = classes.concat(rounded ? "rounded-full" : "rounded-md");

switch (style) {
  case "cancel":
    classes = classes.concat("bg-rosePine-love");
    break;
  case "submit":
    classes = classes.concat("bg-rosePine-pine");
    break;
  case "generic":
    classes = classes.concat("bg-rosePine-highlightHigh");
    break;
}

switch (size) {
  case "small":
    classes = classes.concat("px-4 py-1 text-xl");
    break;
  case "medium":
    classes = classes.concat("px-5 py-1 text-3xl");
    break;

  case "large":
    classes = classes.concat("px-5 py-1 text-5xl");
    break;
}
---

{
  destination ? (
    <a href={destination}>
      <button id={id} class:list={classes} {...attrs}>
        <slot />
      </button>
    </a>
  ) : (
    <button id={id} class:list={classes} type={type} {...attrs}>
      <slot />
    </button>
  )
}
