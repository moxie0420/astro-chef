---
import type { HTMLAttributes } from "astro/types";

type Props = HTMLAttributes<"div">;

const { ...attrs } = Astro.props;
---

<modal-element {...attrs}>
  <slot name="button" />
  <div
    role="dialog"
    aria-modal="false"
    class="bg-overlay/50 fixed top-0 left-0 z-50 hidden h-screen w-screen backdrop-blur-sm"
  >
    <slot />
  </div>
</modal-element>

<script>
  class Modal extends HTMLElement {
    connectedCallback() {
      const btn = this.querySelector("button");
      const content = this.querySelector("div");
      const close = this.querySelector("#closeBtn") as HTMLButtonElement;

      if (btn)
        btn.onclick = () => {
          if (!content) return;

          content.classList.remove("hidden");
          content.classList.add("flex", "flex-col");
          content.ariaModal = "true";
        };

      if (close)
        close.onclick = () => {
          if (!content) return;

          content.classList.remove("flex", "flex-col");
          content.classList.add("hidden");
          content.ariaModal = "false";
        };

      this.addEventListener("modal-close", () => {
        if (!content) return;

        content.classList.remove("flex", "flex-col");
        content.classList.add("hidden");
        content.ariaModal = "false";
      });
    }
  }

  customElements.define("modal-element", Modal);
</script>
