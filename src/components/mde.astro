---
interface Props {
  body: string;
}

const { body } = Astro.props;
---

<div
  class="grid grid-cols-2 overflow-y-auto overflow-x-hidden bg-rosePine-surface w-fit mx-auto border-2 border-rosePine-highlightHigh rounded-md"
>
  <textarea
    id="text"
    name="body"
    class="prose prose-rosePine bg-inherit border border-rosePine-highlightHigh"
    cols="80"
    rows="25">{body}</textarea
  >
  <div
    id="preview"
    class="prose prose-rosePine border border-rosePine-highlightHigh"
  >
  </div>
</div>

<script>
  import { marked, type RendererObject } from "marked";
  import DOMPurify from "dompurify";

  const renderer: RendererObject = {
    image({ href, text }) {
      return `<img src="/api/image?path=${href}" alt="${text}" />`;
    },
  };

  async function genCleanHtml(md: string) {
    marked.use({ renderer });
    return DOMPurify.sanitize(await marked.parse(md));
  }

  const input = document.querySelector("#text") as HTMLTextAreaElement;
  const preview = document.querySelector("#preview");
  if (preview && input) {
    preview.innerHTML = await genCleanHtml(input.value);

    input.addEventListener("input", async () => {
      preview.innerHTML = await genCleanHtml(input.value);
    });
  }
</script>
