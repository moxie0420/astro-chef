---
import MainLayout from "@layouts/layout.astro";
import RecipeCard from "@components/recipe/recipeCard.astro";
import SearchOptions from "@components/searchOptions.astro";

import { actions } from "astro:actions";
import Button from "@components/generic/button.astro";

const filter = Astro.url.searchParams.getAll("filter");

const sortparam = Astro.url.searchParams.get("sortBy") as
  | "by-id"
  | "popular"
  | "random"
  | null;
const count = Astro.url.searchParams.get("perPage");
const search = Astro.url.searchParams.get("search");
const page = Astro.url.searchParams.get("page");

let res;
if (search) {
  res = await Astro.callAction(actions.Recipe.getRecipes, {
    sort: sortparam !== null ? sortparam : "by-id",
    filter: filter,
    query: search,
    number: parseInt(count || "20"),
    page: parseInt(page!) || 1,
  });
} else
  res = await Astro.callAction(actions.Recipe.getRecipes, {
    sort: sortparam !== null ? sortparam : "by-id",
    filter: filter,
    number: parseInt(count || "20"),
    page: parseInt(page!) || 1,
  });

if (res.error) console.error(res.error.message);
if (!res.data) return Astro.redirect("/404");
---

<MainLayout title={"Browse Recipes"}>
  <div class="flex flex-col xl:flex-row w-full">
    <SearchOptions />
    <div>
      <div class="grid grid-cols-2 gap-2 xl:grid-cols-4">
        {
          res.data.map((r) => (
            <div class="flex w-full px-4 mx-auto">
              <RecipeCard recipe={r} />
            </div>
          ))
        }
      </div>
      <div class="flex justify-between mx-auto w-full">
        <Button id="prevPage">Prev</Button>
        <Button id="nextPage">Next</Button>
      </div>
    </div>
  </div>
</MainLayout>

<script>
  import { navigate } from "astro:transitions/client";

  const prevPage = document.getElementById("prevPage") as HTMLButtonElement;
  const nextPage = document.getElementById("nextPage") as HTMLButtonElement;

  const search = new URLSearchParams(window.location.search);
  const page = parseInt(search.get("page")!) || 1;

  const prev = page - 1 >= 1 ? page - 1 : 1;

  if (prevPage)
    prevPage.onclick = () => {
      search.set("page", `${prev}`);
      navigate(`/recipes${search.toString()}`);
    };

  if (nextPage)
    nextPage.onclick = () => {
      search.set("page", `${page + 1}`);
      navigate(`/recipes${search.toString()}`);
    };
</script>
