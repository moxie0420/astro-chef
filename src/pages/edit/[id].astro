---
import { actions } from "astro:actions";

import Ingredients from "@components/ingredients/ingredients";
import Layout from "@layouts/layout.astro";
import Markdown from "@components/markdown";
import RecipeInfo from "@components/recipe/RecipeInfo";
import type { Recipe } from "@lib/types";

const { id } = Astro.params;

if (!id) return Astro.redirect("/recipes");

const { data, error } = await Astro.callAction(actions.Recipe.getRecipe, {
  identifier: id,
});

if (error?.code) return Astro.redirect("/404?message=" + error?.message);
else if (error) return;

if (!data) return Astro.redirect("/404?message=Recipe came back undefined");
---

<Layout title={data.title || "editing"} editing={true}>
  <div class="bg-surface text-text mx-auto w-full md:w-5/6">
    <RecipeInfo recipe={data as Recipe} editing={true} client:only />
    <Ingredients
      recipeId={data.id}
      editing={true}
      ingredients={data.ingredients}
      client:only
    />

    <div class="flex h-fit flex-col gap-2 xl:flex-row">
      <div class="w-full">
        <Markdown
          body={data.body || ""}
          editing={true}
          recipeId={data.id}
          client:load
        />
      </div>
    </div>
  </div>
</Layout>
