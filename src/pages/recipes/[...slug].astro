---
import MainLayout from "../../layouts/mainLayout.astro";
import {db} from "@lib/database";
import { ingredients, recipes } from "schema";
import {eq, count} from "drizzle-orm"
import { Markdown } from "@astropub/md";

import Ingredientholder from "@components/ingredientholder.astro";

const { slug } = Astro.params;

let res;
switch (slug) {
  case "new":
    const newRecipe = await db
    .insert(recipes)
    .values({ Title: "new recipe" })
    .returning({ Id: recipes.Id });
    return Astro.redirect("/recipes/"+newRecipe[0].Id);

  case "random":
    const counted = await db.select({ count: count() }).from(recipes);
    const random = await db
      .select()
      .from(recipes)
      .orderBy(recipes.Id)
      .limit(1)
      .offset(Math.floor(Math.random() * counted[0].count));
    return Astro.redirect("/recipes/"+random[0].Id);

  default:
    res = await db
      .select()
      .from(recipes)
      .where(eq(recipes.Id, parseInt(slug as string)));
    break;
}

const recipe = res[0];


if (!recipe) return Astro.redirect("/404");

const editMode = Astro.url.searchParams.get("edit") === "true";

if (Astro.request.method === "POST") {
  try {
    const formdata = await Astro.request.formData();
    let update = {}: {
      prep?: tim
    };
    if (formdata.has("prep")) {

    }


  } catch (error) {
    if (error instanceof Error) {
      console.error(error.message);
    }
  )
}
---

<MainLayout title={recipe.Title || ""}>
  {
    editMode ? (
      <>
        <div class="shadow-xl rounded-lg justify-between flex p-1 sticky top-0 z-10">
          <div>
            <label for="title">Recipe Title:</label>
            <input
              form="text"
              type="text"
              required
              minlength="4"
              maxlength="125"
              value={recipe.Title}
              name="title"
              class="bg-transparent border border-kitchen-fg backdrop-blur-sm rounded-sm"
            />
          </div>
          <div>
            <a href={Astro.url.pathname}>
              <button>Cancel</button>
            </a>

            <button form="text" type="submit">
              Save
            </button>
          </div>
        </div>
        <Ingredientholder recipeId={recipe.Id} editMode={editMode}/>

        <form id="text" method="post">
          <textarea
            form="text"
            name="body"
            cols="120"
            rows="50"
            class="bg-transparent mx-auto"
            required
            spellcheck="true"
            set:text={recipe.Body as string}
          />
        </form>
      </>
    ) : (
      <>
        <div class="flex flex-col gap-5 items-center">
          <div class="justify-between shadow-2xl flex w-full h-20 p-1 text-5xl text-kitchen-fg">
            <span class="my-auto font-bold">{recipe.Title}</span>
            <a href={Astro.url.pathname + "?edit=true"}>
              <button
                id="editButton"
                class="bg-kitchen-primary rounded-2xl justify-self-end my-auto p-3"
              >
                Edit
              </button>
            </a>
          </div>
          <Ingredientholder recipeId={recipe.Id} editMode={editMode}/>
          <div />
          <Markdown of={recipe.Body || ""} />
        </div>
      </>
    )
  }
</MainLayout>
