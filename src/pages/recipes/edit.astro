---
import { actions } from "astro:actions";

import RecipeInfo from "@components/recipe/RecipeInfo";
import Layout from "@layouts/layout.astro";
import Ingredients from "@components/ingredients/ingredients";
import Markdown from "@components/markdown";
import AvailibleImages from "@components/assets/availibleImages.astro";

const params = Astro.url.searchParams;

const id = params.get("id");
if (!id) return Astro.redirect("/404?message=Recipe came back undefined");

const { data, error } = await Astro.callAction(actions.Recipe.getRecipe, {
  method: "id",
  identifier: id,
});

if (error?.code) return Astro.redirect("/404?message=" + error?.message);
else if (error) return;

if (!data) return Astro.redirect("/404?message=Recipe came back undefined");
---

<Layout title={data.title} editing={true}>
  <div class="bg-surface text-text mx-auto w-full md:w-5/6">
    {/* @ts-ignore */}
    <RecipeInfo recipe={data} editing={true} client:load />
    <Ingredients recipeId={data.id} editing={true} client:only />

    <div class="flex h-fit flex-col gap-2 xl:flex-row">
      <div class="mx-auto max-w-sm p-2">
        <AvailibleImages />
      </div>

      <div class="w-full">
        <Markdown
          body={data.body || ""}
          editing={true}
          recipeId={data.id}
          client:load
        />
      </div>
    </div>
  </div>
</Layout>
