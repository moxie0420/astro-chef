---
import { actions } from "astro:actions";

import IngredientHolder from "@components/ingredients/ingredients";
import Layout from "@layouts/layout.astro";
import Markdown from "@components/markdown";
import RecipeInfo from "@components/recipe/RecipeInfo";
import type { Recipe } from "@lib/types";

const { id } = Astro.params;

if (!id) return Astro.redirect("/");

const { data, error } = await Astro.callAction(actions.Recipe.getRecipe, {
  identifier: id,
});

if (error?.code) return Astro.redirect("/404?message=" + error?.message);
else if (error) return Astro.redirect("/404?message=An unknown Error occurred");

if (!data) return Astro.redirect("/404?message=Recipe came back undefined");

Astro.callAction(actions.Recipe.updateRecipe, {
  id: parseInt(id),
  totalViews: data.totalViews + 1,
});
---

<Layout title={data.title || ""} recipeId={data.id}>
  <div class="pt-1">
    <RecipeInfo recipe={data as Recipe} editing={false} client:load />
  </div>

  <div class="mx-auto">
    <IngredientHolder
      recipeId={data.id}
      editing={false}
      ingredients={data.ingredients}
      client:load
    />
  </div>

  <Markdown
    body={data.body ||
      "## Nothing here yet ...\n\n\nOpen the menu & press edit to get started"}
    editing={false}
    recipeId={data.id}
  />
</Layout>
