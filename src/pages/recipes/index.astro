---
import Main from "@layouts/main.astro";
import RecipeCard from "@components/recipe/Card";
import SearchOptions from "@components/forms/Search";
import { trpc } from "@lib/trpc/client";
import type { Recipe } from "src/entity/Recipe";

const urlParams = Astro.url.searchParams;

const params: {
  query?: string;
  sort: "popular" | "by-id" | "title";
  number: string;
} = {
  query: urlParams.get("q") || undefined,
  sort: (urlParams.get("s") as "popular" | "by-id" | "title") || "title",
  number: urlParams.get("n") || "25",
};

const res = await trpc.recipe.getMultiple.query({
  number: parseInt(params.number),
  sort: params.sort,
  query: params.query,
});

if (!res) return Astro.redirect("/404");
---

<Main title={"Browse Recipes"}>
  <SearchOptions
    search={params.query}
    number={parseInt(params.number) || 25}
    sort={params.sort}
    client:load
  />

  <div class="mx-auto flex size-full flex-wrap">
    {res.map((r) => <RecipeCard recipe={r as Recipe} client:load />)}
  </div>

  <div class="m-2 mx-auto flex w-full justify-between">
    <button id="prevPage" class="bg-foam rounded-md px-2">Prev</button>
    <button id="nextPage" class="bg-foam rounded-md px-2">Next</button>
  </div>
</Main>

<script>
  import { navigate } from "astro:transitions/client";

  const prevPage = document.getElementById("prevPage") as HTMLButtonElement;
  const nextPage = document.getElementById("nextPage") as HTMLButtonElement;

  const search = new URLSearchParams(window.location.search);
  const page = parseInt(search.get("page")!) || 1;

  const prev = page - 1 >= 1 ? page - 1 : 1;

  if (prevPage)
    prevPage.onclick = () => {
      search.set("page", `${prev}`);
      navigate(`/recipes${search.toString()}`);
    };

  if (nextPage)
    nextPage.onclick = () => {
      search.set("page", `${page + 1}`);
      navigate(`/recipes${search.toString()}`);
    };
</script>
