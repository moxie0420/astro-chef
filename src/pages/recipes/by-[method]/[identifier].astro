---
import { actions } from "astro:actions";
import { marked, type RendererObject } from "marked";

import Button from "@components/button.astro";
import IngredientHolder from "@components/ingredients/ingredientHolder.astro";
import RecipeLayout from "@layouts/recipeLayout.astro";
import Titlebar from "@components/titlebar.astro";

const { method, identifier } = Astro.params;

const { data, error } = await Astro.callAction(actions.recipe.getRecipe, {
  method,
  identifier,
});

if (error?.code) return Astro.redirect("/404?message=" + error?.message);
else if (error) return Astro.redirect("/404?message=An Unkown Error Occured");

if (!data) return Astro.redirect("/404?message=Recipe came back undefined");

const renderer: RendererObject = {
  image({ href, text }) {
    return `<img src="/api/image?path=${href}" alt="${text}"  class="mx-auto w-1/3" />`;
  },
};
marked.use({ renderer });
const md = await marked.parse(data.body || "");
---

<RecipeLayout title={data.title}>
  <Titlebar>
    <span class="my-auto h-fit">{data.title}</span>

    <div class="my-auto">
      <Button
        style="generic"
        size="medium"
        destination={"/recipes/edit/" + data.id}
      >
        Edit
      </Button>
    </div>
  </Titlebar>
  <div
    class="w-2/3 flex flex-col rounded-lg bg-rosePine-surface overflow-scroll overflow-y-auto"
  >
    <div class="mx-auto p-3">
      <IngredientHolder recipeId={data.id} editing={false} />
    </div>

    <article
      set:html={md}
      class="text-center p-2 2xl:prose-2xl prose-rosePine"
    />
  </div>
</RecipeLayout>
