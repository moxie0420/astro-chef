---
import { actions } from "astro:actions";

import DefaultImage from "@components/assets/defaultImage.astro";
import IngredientHolder from "@components/ingredients/ingredients";
import Layout from "@layouts/layout.astro";
import Markdown from "@components/markdown";
// import { recipe } from "@db/schema";
// import AddToList from "@components/recipe/addToList.astro";

const { method, identifier } = Astro.params;

const { data, error } = await Astro.callAction(actions.Recipe.getRecipe, {
  method,
  identifier,
});

if (error?.code) return Astro.redirect("/404?message=" + error?.message);
else if (error) return Astro.redirect("/404?message=An Unkown Error Occured");

if (!data) return Astro.redirect("/404?message=Recipe came back undefined");

const views = data.totalViews || 0;

Astro.callAction(actions.Recipe.updateRecipe, {
  id: data.id,
  totalViews: views + 1,
});
---

<Layout title={data.title || ""} recipeId={data.id}>
  <div class="bg-surface mx-auto w-full max-w-screen-2xl overflow-scroll">
    <div
      class="text-text pb-3 text-center text-xl font-bold md:text-4xl lg:text-5xl"
    >
      {data.title}
    </div>
    <div class="relative mx-auto w-5/6 2xl:w-3/5">
      <DefaultImage src={data.image} alt={data.imageAlt} />
      <div class="bg-overlay absolute bottom-1 left-1">
        {/*<AddToList recipeId={data.id} />*/}
      </div>
    </div>

    <div class="mx-auto">
      <IngredientHolder recipeId={data.id} editing={false} client:only />
    </div>

    <Markdown body={data.body || ""} editing={false} recipeId={data.id} />
  </div>
</Layout>
