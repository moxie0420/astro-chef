---
import "@styles/base.css";

import { ClientRouter } from "astro:transitions";
import { pwaInfo } from "virtual:pwa-info";
import { SEO } from "astro-seo";
import Header from "@components/header";

import "@fontsource/noto-sans";

interface Props {
  title: string;
  description?: string;
  OpenGraphImg?: string;
  recipeId?: number;
  editing?: boolean;
}

const { title, description, recipeId, editing } = Astro.props;

const pages = [
  {
    name: "Home",
    path: "/",
  },
  {
    name: "Recipes",
    path: "/recipes",
  },
];

const id = () => {
  const id = Astro.url.searchParams.get("id");
  if (!id) return;
  return parseInt(id);
};
---

<html lang="en">
  <head>
    <SEO
      charset="utf-8"
      title={title}
      description={description ?? "No description made yet"}
      extend={{
        meta: [
          {
            name: "viewport",
            content: "width=device-width, initial-scale=1.0",
          },
          { name: "generator", content: Astro.generator },
          { name: "theme-color", content: "#191724" },
        ],
        link: [
          { rel: "icon", href: "/favicon.ico?v=2" },
          { rel: "apple-touch-icon", href: "/android-chrome-192x192.png" },
        ],
      }}
    />
    <script src="/src/lib/pwa.ts"></script>
    {pwaInfo && <Fragment set:html={pwaInfo.webManifest.linkTag} />}
    <ClientRouter />
  </head>

  <body class="bg-base flex h-screen flex-col">
    <Header
      pages={pages}
      recipeId={id() || recipeId}
      editing={editing}
      transition:persist
      client:load
    />
    <slot />
  </body>
</html>
